

-- Usar la base de datos creada
USE FGJ_VERIFICACION_VEHICULAR;
GO

-- Crear la tabla usuarios
CREATE TABLE usuarios (
    id INT IDENTITY(1,1) PRIMARY KEY,
    correo VARCHAR(255) NOT NULL UNIQUE,
    contra VARCHAR(255) NOT NULL,
    rol VARCHAR(50) NOT NULL, 
    fecha_registro DATETIME DEFAULT GETDATE()
);

CREATE TABLE resguardante (
    id INT IDENTITY(1,1) PRIMARY KEY, 
    fech DATETIME DEFAULT GETDATE(),
    municipio VARCHAR(255) NOT NULL,
    FGJRM VARCHAR(255) NOT NULL,
    numero_empleado INT NOT NULL,
    resguardante VARCHAR(255) NOT NULL,
    cargo VARCHAR(255) NOT NULL,
    licencia VARCHAR(255) NOT NULL,
    vigencia VARCHAR(255) NOT NULL,
    fiscalia_general VARCHAR(255) NOT NULL,
    fiscalia_especializada_en VARCHAR(255) NOT NULL,
    vicefiscalia_en VARCHAR(255) NOT NULL,
    direccion_general VARCHAR(255) NOT NULL,
    departamento_area VARCHAR(255) NOT NULL,
    numero_empleado_interno INT NOT NULL,
    resguardante_interno VARCHAR(255) NOT NULL,
    cargo_interno VARCHAR(255) NOT NULL,
    licencia_interna VARCHAR(255) NOT NULL,
    vigencia_interna  VARCHAR(255) NOT NULL,
    celular VARCHAR(255) NOT NULL
);
GO
CREATE TABLE vehiculo (
    id INT IDENTITY(1,1) PRIMARY KEY, 
    resguardante_id INT NOT NULL, 
    numero_economico VARCHAR(255) NOT NULL,
    placa VARCHAR(255) NOT NULL,
    serie VARCHAR(255) NOT NULL,
    color VARCHAR(255) NOT NULL,
    clase VARCHAR(255) NOT NULL,
    marca VARCHAR(255) NOT NULL,
    submarca VARCHAR(255) NOT NULL,
    modelo VARCHAR(255) NOT NULL,
    estado VARCHAR(20) CHECK (estado IN ('propio', 'arrendado', 'decomisado')),
    kilometraje INT NOT NULL,
    ocupacion VARCHAR(255) NOT NULL,
   FOREIGN KEY (resguardante_id) REFERENCES resguardante(id)
);
GO
CREATE TABLE verificacion(
    id INT IDENTITY(1,1) PRIMARY KEY,
    vehiculo_id INT  NOT NULL,
    categoria VARCHAR(255) NOT NULL,
    elemento VARCHAR(255) NOT NULL,
    estado VARCHAR(20) CHECK (estado IN ('bien', 'mal', 'regular', 'si', 'no')),
    FOREIGN KEY (vehiculo_id) REFERENCES vehiculo(id)
);
GO
CREATE TABLE Observacionesverificacion(
    id INT IDENTITY(1,1) PRIMARY KEY, 
    categoria VARCHAR(255) NOT NULL,
    observaciones TEXT NOT NULL,
    vehiculo_id INT,  
    FOREIGN KEY (vehiculo_id) REFERENCES vehiculo(id)
);
GO
CREATE TABLE fotos (
    id INT IDENTITY(1,1) PRIMARY KEY, 
    vehiculo_id INT  NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    nombre_archivo VARCHAR(255) NOT NULL, 
    extension varchar(10) NOT NULL,
    tama침o INT NOT NULL,
    observaciones TEXT NOT NULL
    FOREIGN KEY (vehiculo_id) REFERENCES vehiculo(id)
);
GO

CREATE VIEW historial AS
SELECT 
    v.id AS vehiculo_id, v.numero_economico, v.placa, v.serie, v.color, 
    v.clase, v.marca, v.submarca, v.modelo, v.estado, v.kilometraje, v.ocupacion,
    r.id AS resguardante_id, r.fech AS fecha_resguardo, r.municipio, r.FGJRM,
    r.numero_empleado, r.resguardante, r.cargo, r.licencia, r.vigencia,
    r.fiscalia_general, r.fiscalia_especializada_en, r.vicefiscalia_en, 
    r.direccion_general, r.departamento_area, r.numero_empleado_interno, 
    r.resguardante_interno, r.cargo_interno, r.licencia_interna, 
    r.vigencia_interna, r.celular,

    -- Datos de verificaci칩n
    (SELECT STRING_AGG(CONCAT(vr.categoria, ': ', vr.elemento, ' (', vr.estado, ')'), ' | ') 
     FROM verificacion vr WHERE vr.vehiculo_id = v.id) AS verificacion,

    -- Observaciones generales
    (SELECT STRING_AGG(CAST(ov.observaciones AS VARCHAR(MAX)), ' | ') 
     FROM Observacionesverificacion ov WHERE ov.vehiculo_id = v.id) AS observaciones,

    -- Informaci칩n de fotos (nombre + observaciones)
    (SELECT STRING_AGG(CONCAT(f.nombre_archivo, '.', f.extension, '||', f.observaciones), ' | ') 
     FROM fotos f WHERE f.vehiculo_id = v.id) AS fotos

FROM vehiculo v
LEFT JOIN resguardante r ON v.resguardante_id = r.id;

GO

-- Crear la tabla de archivos para reglas, resguardos y fotos
CREATE TABLE archivos (
    id INT IDENTITY(1,1) PRIMARY KEY, 
    vehiculo_id INT NOT NULL,
    tipo VARCHAR(20) CHECK (tipo IN ('reglas', 'resguardo', 'fotos')), -- Tipo de documento
    nombre_archivo VARCHAR(255) NOT NULL,
    ruta_archivo VARCHAR(500) NOT NULL, 
    extension VARCHAR(10) NOT NULL,
    tama침o INT NOT NULL, 
    FOREIGN KEY (vehiculo_id) REFERENCES vehiculo(id)
);
GO
